import 'package:get/get.dart';

import '../meetings/meetings_controller.dart';

class SummaryController extends GetxController {
  late Map<String, dynamic> meetingData;
  
  final keyPoints = <String>[
    'Discussed Q1 project roadmap',
    'Agreed on new feature priorities',
    'Budget allocation needs review',
    'Team expansion planned for March',
  ];

  final actionItems = <String>[
    'John to prepare budget proposal',
    'Sarah to interview candidates',
    'Mike to update project timeline',
    'Team to review technical specs',
  ];

  final transcript = '''This is a placeholder for the meeting transcript.
  
In a real application, this would contain the full transcription of the recorded meeting, generated by a speech-to-text service.

The transcript would include timestamps and speaker identification for better context and navigation.''';

  @override
  void onInit() {
    super.onInit();
    // Get the meeting data passed from the recording page
    meetingData = Get.arguments ?? {};
  }

  void shareSummary() {
    // TODO: Implement share functionality
    Get.snackbar(
      'Share',
      'Share functionality will be implemented',
      snackPosition: SnackPosition.BOTTOM,
    );
  }

  void saveSummary() {
    // Create meeting data to save
    final meeting = <String, String>{
      'id': meetingData['recordingId']?.toString() ?? DateTime.now().millisecondsSinceEpoch.toString(),
      'title': meetingData['title']?.toString() ?? 'Untitled Meeting',
      'date': DateTime.now().toString().substring(0, 16),
      'duration': meetingData['duration']?.toString() ?? '00:00',
      'participants': '1', // Default for recorded meetings
    };
    
    // Add meeting to the meetings list
    final meetingsController = Get.find<MeetingsController>();
    meetingsController.addNewMeeting(meeting);
    
    // TODO: Implement actual save functionality (database, etc.)
    Get.snackbar(
      'Saved',
      'Meeting saved successfully',
      snackPosition: SnackPosition.BOTTOM,
    );
    
    // Navigate back to home (meetings list)
    Get.until((route) => route.settings.name == '/home');
  }
}